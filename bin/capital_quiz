#!/usr/bin/env perl
# capital_quiz: Print a country or state name & ask for its capital.
# Check the response and show final statistics when i/p is 'quit'.

# Note: 
#
# Status: TBD.
# 
#

use strict;
use warnings;

my %capitals = (
    s => 'C',
    s1 => 'c1',
    Alaska => 'Juneau',
    Australia => 'Canberra',
    Belize => 'Belmopan',
    China => 'Beijing',
    Delaware => 'Dover',
    England => 'London',
);

my $correct_ans = 0;
my $correct_pct = 0;
my $size_of_capitals = scalar keys %capitals;
my $quit = "QUIT";
my $total_ans = 0;


my %messages = (
    query => "What is the capital of ",
    right => "  That is correct!\n",
    wrong => "  Sorry, that is incorrect.\n",
    totals => "Thank you for playing!  You got ",
);

# Ask questions & eval answer.
    my $k = "s"; 
    my $v;
    my $answer;
    #F while ( <> !~ /$quit/i ) {
    #F while ( <> && $_ !~ /$quit/i ) {
    #F while ( $_ = <> && $_ !~ /$quit/i ) {
    #F while ( $_ = <> && $_ !~ /quit/i ) {
    #TBD print "$messages{query} $k?  ";
    #TBR print "DBG: Press Enter to start the quiz.";
    #F while ( <> ) {
    #F while ( 1 ) {
      #DBG print "DBG: Got \$_: ,$_, .\n";
      #DBG if ( chomp ($_) =~ /quit.*/i ) {
      #DBG print "Got 'quit' request.\n";
      #DBG last;
      #DBG }
        #TBD
        #DBG my $rand  = 1;
        my $rand  = int (rand $size_of_capitals);
        my $count = 0;
        while ( ($k,$v) = each %capitals ) {
            next if ( $count++ < $rand );
            print "$messages{query} $k?  ";
            chomp (my $answer = uc <>);
            if ( $answer =~ /quit.*/i ) {
                print "Got 'quit' request.\n";
                last;
            }
            $total_ans++;
            if ( $answer eq uc $v ) {
                print "$messages{right}";
                $correct_ans++;
                next;
            }
            else {
                print "$messages{wrong}";
                next;
            }
            #TBD last;
        }
#F }  # End while (1)

# Print o/p.
    $correct_pct = int ( 100 * $correct_ans / $total_ans );
    #DBG print "\nWhat I got:\n";
    #DBG print "DBG: $messages{query} $k?  ";
    #DBG print "DBG: $answer\n";
    print "$messages{totals} ";
    print "$correct_ans out of $total_ans right ($correct_pct%).\n";



=begin spec

Hashes: Capital Quiz

Write a program to quiz yourself on the capital cities of various countries or
states.

Include in your program a hash containing the answers: the key to the hash
should be the country, and the value should be the name of its capital city.
Use all UPPER CASE letters for both country and city names.

Your program should consist of an infinite loop (until the user asks to quit,
anyway). Each time through the loop, pick one of the countries at random using
Perl's random number generator and display that country for the user. Then ask
the user to name its capital city.

Next, read a line from the keyboard and compare it to the hash value that
corresponds to the country that was asked (convert it to all upper case, so
that it is case-insensitive). If it is the same, then inform the user and
increment a variable to count the number of correct answers. If it is not the
same, inform the user. In either case, increment a variable to count the total
number of questions asked.

If the user types "QUIT" instead of giving an answer (again, be
case-insensitive), then display a summary of the user's scores and exit.
Display the number correct, total number, and percentage correct (use int() to
round it off).

Sample output:

  What is the capital of UNITED STATES OF AMERICA? washington
  That is correct!
  What is the capital of RUSSIA? moscow
  That is correct!
  What is the capital of INDIA? bombay
  Sorry, that is incorrect.
  What is the capital of CHINA? Quit
  Thank you for playing!  You got 2 out of 3 right (66%).


=end spec

=cut

